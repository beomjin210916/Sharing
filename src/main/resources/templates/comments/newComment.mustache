<div class="container">
<div class="card m-2" id="comments-new">
    <div class="card-body">
        <!-- 댓글 작성 폼-->
        <form>
            <!-- 닉네임 입력 -->
            <div class="mb-3">
                <label class="form-label">닉네임</label>
                <input type="text" class="form-control form-control-sm" id="new-comment-nickname">
            </div>
            <!-- 댓글 본문 입력 -->
            <div class="mb-3">
                <label class="form-label">댓글 내용</label>
                <textarea type="text" class="form-control form-control-sm" rows="3" id="new-comment-body"></textarea>
            </div>
            <!-- 히든 인풋 -->
            {{#question}}
                <input type="hidden" id="new-comment-question-id" value="{{id}}">
            {{/question}}
            <!-- 전송 버튼 -->
            <button type="button" class="btn btn-outline-primary btn-sm" id="comment-create-btn">댓글 작성</button>
        </form>
    </div>
</div>
</div>

<script>
{
    // 댓글 생성 버튼을 변수화(id 가 comment-create-btn 인 대상을 변수화)
    const commentCreateBtn = document.querySelector("#comment-create-btn");

    // 버튼 클릭 이벤트를 감지!
    commentCreateBtn.addEventListener("click", function() {

        // 새 댓글 객체 생성
        // input에 있는 new comment nickname과 body, question id의 html-id 값을 찾아서 넣으면 골라진다
        // .value를 찍어야 그 안에 있는 값을 가져오지, 아니면 전체 객체 자체를 반환한다
        const comment = {
            nickname: document.querySelector("#new-comment-nickname").value,
            body: document.querySelector("#new-comment-body").value,
            questionId: document.querySelector("#new-comment-question-id").value
        };

        // 댓글 객체 출력
        console.log(comment);

        // fetch() - Talend API 요청을 JavaScript로 보내준다!
        // 여기서 comment는 38행의 const comment객체이다. 그중의 questionId를 가져온다는 이야기
        const url = "/api/questions/" + comment.questionId + "/comments";
        fetch(url, {
            method: "post",                 // POST 요청
            body: JSON.stringify(comment),  // comment JS 객체를 JSON으로 변경하여 보냄
            headers: {
                "Content-Type": "application/json" // 이 내용물의 타입은 json 이라고 명시하는 거임
            }
        }).then(response => {
            // http 응답 코드에 따른 메시지 출력
            const msg = (response.ok) ? "댓글이 등록되었습니다." : "댓글 등록이 실패했습니다";
            alert(msg);
            // 현재 페이지 새로고침
            window.location.reload();


    });
    });
}
</script>